import"./MerkleTree.zok" as MerkleTree;
import "utils/pack/bool/unpack.zok" as unpack;

def main<D>(\
  field oldLeaf, \
  field oldRoot, \
  field newLeaf, \
  field newRoot, \
  field pathIndices, \
  field[D] pathElements) -> bool {
  bool[D] pathIndicesUnpacked = unpack::<D>(pathIndices);
  bool[D] mut pathIndicesReversed = [false; D];
  for u32 i in 0..D {
    pathIndicesReversed[D - i - 1] = pathIndicesUnpacked[i];
  }
  field calcOldRoot = MerkleTree(oldLeaf, pathIndicesReversed, pathElements);
  assert(oldRoot == calcOldRoot);
  field calcNewRoot = MerkleTree(newLeaf, pathIndicesReversed, pathElements);
  assert(newRoot == calcNewRoot);
  return true;
}
